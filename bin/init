#!/usr/bin/env node

const Handlebars = require('handlebars')
// 交互式命令行
const inquirer = require('inquirer')
// 修改控制台字符串的样式
const chalk = require('chalk')
// node 内置文件模块
const fs = require('fs')
// 读取根目录下的 template.json
var htmlTemplet='';
var cssTemplet='';
var jsTemplet='';

fs.readFile(`${__dirname}/../template/doNotChangeIt.html`, null, function(error, data) {
    if(error){
        console.log('读取doNotChangeIt.html文件出错了'+error)
    }else {
        htmlTemplet=data.toString()
        // console.log('成功读取index.html'+htmlTemplet)


    }

})

fs.readFile(`${__dirname}/../template/doNotChangeIt.css`, null, function(error, data) {
    if(error){
        console.log('读取doNotChangeIt.css文件出错了'+error)
    }else {
        cssTemplet=data.toString()
        // console.log('成功读取index.html'+htmlTemplet)


    }

})
fs.readFile(`${__dirname}/../template/doNotChangeIt.js`, null, function(error, data) {
    if(error){
        console.log('读取doNotChangeIt.js文件出错了'+error)
    }else {
        jsTemplet=data.toString()
        // console.log('成功读取index.html'+htmlTemplet)


    }

})





// var data = { "name": "Alan",
//     "hometown": "Somewhere, TX",
//     "kids": [{"name": "Jimmy", "age": "12"}, {"name": "Sally", "age": "4"}]
// };
//
// var result = htmlHandlebarsComp(data);



// 自定义交互式命令行的问题及简单的校验
let question = [
    {
        name: "projectName",
        type: 'input',
        message: "请输入项目名称(便于错误监控后台查看)",
        validate (val) {
            if (val === '') return '项目名称为必填项!'
            return true
        }
    },
    {
        name: "fileName",
        type: 'input',
        message: "请输入html/css/js的文件名",
        validate (val) {
            if (val === '') return 'html/css/js文件名为必填项!'
            return true
        }
    },
    {
        name: "title",
        type: 'input',
        message: "请输入页面标题title",
        validate (val) {
            if (val === '') return '页面标题title为必填项!'
            return true
        }
    },
    {
        name: "apikey",
        type: 'input',
        message: "请输入您的fundebug的apikey",
        validate (apikey) {
            if (apikey === '') {
                return 'apikey为必填项!'
            }else if (apikey.length<64){
                return 'apikey位数小于64!'
            }else {
                return true
            }
        }
    },
    {
        name: "isInjectJQ",
        type: 'confirm',
        message: "是否引入jQuery？"
        // validate (apikey) {
        //     if (apikey === '') {
        //         return 'apikey为必填项!'
        //     }else if (apikey.length<64){
        //         return 'apikey位数小于64!'
        //     }else {
        //         return true
        //     }
        // }
    }

]

inquirer
    .prompt(question).then(answers => {
    // answers 就是用户输入的内容，是个对象
    let {projectName,fileName,title,apikey,isInjectJQ } = answers;

var htmlHandlebarsComp = Handlebars.compile(htmlTemplet);

var htmlResult = htmlHandlebarsComp(answers);

// console.log('answers====',answers)
// console.log('htmlTemplet====',htmlTemplet)
// // 过滤 unicode 字符
// htmlTemplet[name] = url.replace(/[\u0000-\u0019]/g, '')
// // 把模板信息写入 template.json 文件中
// fs.writeFile(`${__dirname}/../template.json`, JSON.stringify(htmlTemplet), 'utf-8', err => {
//     if (err) console.log(err)
// console.log('\n')
// console.log(chalk.green('Added successfully!\n'))
// console.log(chalk.grey('The latest template list is: \n'))
// console.log(htmlTemplet)
// console.log('\n')
// })

// 生成html文件
fs.writeFile(`${__dirname}/../workspace/${fileName}.html`, htmlResult, 'utf8', err => {
    if (err) console.log(err)
console.log('\n')
console.log(chalk.green(`在workspace下成功新建了${fileName}.html文件)\n`))
// console.log(chalk.grey('请不要移动项目文件哦\n'))
// console.log('htmlResult')
// console.log('\n')
})

// 生成css文件

fs.writeFile(`${__dirname}/../workspace/css/${fileName}.css`,cssTemplet , 'utf8', err => {
    if (err) console.log(err)
console.log('\n')
console.log(chalk.green(`在workspace/css下成功新建了${fileName}.css文件\n`))
// console.log(chalk.grey('请不要移动项目文件哦\n'))
// console.log('htmlResult')
// console.log('\n')
})


// 生成js文件

fs.writeFile(`${__dirname}/../workspace/js/${fileName}.js`,jsTemplet , 'utf8', err => {
    if (err) console.log(err)
console.log('\n')
console.log(chalk.green(`在workspace/js下成功新建了${fileName}.js文件\n`))
// console.log(chalk.grey('请不要移动项目文件哦\n'))
// console.log('htmlResult')
// console.log('\n')
})

// // 写入文件
// var  writerStream = fs.createWriteStream(`${fileName}.html`);
// writerStream.write(htmlResult.toString(), 'UTF8');
// writerStream.end();

})

// 输入fundebug apikey
// 输入项目名称
// 输入文件名名称
// 输入网页标题
